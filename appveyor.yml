environment:
  matrix:
    - PYTHON: "C:\\Python36"
    - PYTHON: "C:\\Python36-x64"

install:
  #- ECHO "Hello Appveyor!"
  #- ECHO "Filesystem root:"
  #- ps: "ls \"C:/\""

  #- ECHO "Installed SDKs:"
  #- ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  #- ps: if (-not(Test-Path($env:PYTHON))) { & appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  #- "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "%PYTHON%\\python.exe --version"
  - "%PYTHON%\\python.exe -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "%PYTHON%\\Scripts\\pip.exe install --disable-pip-version-check --user --upgrade pip"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "%PYTHON%\\Scripts\\pip.exe install requests"


# no msbuild phase in the project
build: off

#build_script:
  # Build the compiled extension
  #- "%CMD_IN_ENV% python setup.py build"

test_script:
  # Run the project tests
  #- "%CMD_IN_ENV% python setup.py nosetests"
  - "%PYTHON%\\python.exe -m unittest -v --fail"

#after_test:
  # If tests are successful, create binary packages for the project.
  #- "%CMD_IN_ENV% python setup.py bdist_wheel"
  #- "%CMD_IN_ENV% python setup.py bdist_wininst"
  #- "%CMD_IN_ENV% python setup.py bdist_msi"
  #- ps: "ls dist"

#artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  #- path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#